import{S as j,i as q,s as D,k as f,l as x,m as M,h as C,n as A,b as H,G as z,H as P,o as V}from"../chunks/index.137f5445.js";import{S as U,P as $,W as J,L as K,c as N,I as Q,U as G,K as I,Q as T,J as X,O as Y,C as Z}from"../chunks/three.module.c2ac7129.js";import{O as ee}from"../chunks/OrbitControls.e9bb9833.js";import{G as ne}from"../chunks/lil-gui.esm.5b862306.js";function te(b){let n,s,t;return{c(){n=f("div"),s=f("div"),t=f("canvas"),this.h()},l(e){n=x(e,"DIV",{});var a=M(n);s=x(a,"DIV",{class:!0});var l=M(s);t=x(l,"CANVAS",{class:!0}),M(t).forEach(C),l.forEach(C),a.forEach(C),this.h()},h(){A(t,"class","webgl svelte-1xjiexi"),A(s,"class","app svelte-1xjiexi")},m(e,a){H(e,n,a),z(n,s),z(s,t)},p:P,i:P,o:P,d(e){e&&C(n)}}}function ae(b){return V(()=>{N.enabled=!1;const n=new ne,s=document.querySelector("canvas.webgl"),t=new U,e={count:1e5,size:.01,radius:5,branches:3,spin:1,startSpacing:0,randomness:.2,randomnessPower:1,insideColor:"#ff5588",outsideColor:"#005588"};let a=null,l=null,w=null;const i=()=>{w!==null&&(a.dispose(),l.dispose(),t.remove(w)),a=new Q;const p=new Float32Array(e.count*3),u=new Float32Array(e.count*3),E=new G(e.insideColor),k=new G(e.outsideColor);for(let g=0;g<e.count;g++){const m=g*3,c=Math.random()*e.radius+e.startSpacing,y=g%e.branches/e.branches*Math.PI*2,F=c*e.spin,L=Math.pow(Math.random(),e.randomnessPower)*(Math.random()<.5?-1:1)*e.randomness*c,O=Math.pow(Math.random(),e.randomnessPower)*(Math.random()<.5?-1:1)*e.randomness*c,W=Math.pow(Math.random(),e.randomnessPower)*(Math.random()<.5?-1:1)*e.randomness*c;p[m]=Math.cos(y+F)*c+L,p[m+1]=O,p[m+2]=Math.sin(y+F)*c+W;const v=E.clone();v.lerp(k,c/e.radius),u[m]=v.r,u[m+1]=v.g,u[m+2]=v.b}a.setAttribute("position",new I(p,3)),a.setAttribute("color",new I(u,3));const B={color:14342874,size:e.size,sizeAttenuation:!0,blending:T,vertexColors:!0};l=new X(B),w=new Y(a,l),t.add(w)},r=n.addFolder("Galaxy");r.add(e,"count",100,1e6,100).onFinishChange(i),r.add(e,"size",.001,.1,.001).onFinishChange(i),r.add(e,"radius",.01,20,.01).onFinishChange(i),r.add(e,"branches",2,20,1).onFinishChange(i),r.add(e,"spin",0,2,.01).onFinishChange(i),r.add(e,"randomness",.01,1,.01).onFinishChange(i),r.add(e,"startSpacing",-10,10,.01).onFinishChange(i),r.add(e,"randomnessPower",1,10,.01).onFinishChange(i),i();const o={width:window.innerWidth,height:window.innerHeight};window.addEventListener("resize",()=>{o.width=window.innerWidth,o.height=window.innerHeight,d.aspect=o.width/o.height,d.updateProjectionMatrix(),h.setSize(o.width,o.height),h.setPixelRatio(Math.min(window.devicePixelRatio,2))});const d=new $(75,o.width/o.height,.1,100);d.position.x=3,d.position.y=3,d.position.z=3,t.add(d);const S=new ee(d,s);S.enableDamping=!0;const h=new J({canvas:s});h.outputColorSpace=K,h.setSize(o.width,o.height),h.setPixelRatio(Math.min(window.devicePixelRatio,2));const R=new Z,_=()=>{R.getElapsedTime(),S.update(),h.render(t,d),window.requestAnimationFrame(_)};_()}),[]}class de extends j{constructor(n){super(),q(this,n,ae,te,D,{})}}export{de as component};
