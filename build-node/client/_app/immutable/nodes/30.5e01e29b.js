import{S as b,i as C,s as M,k as w,l as m,m as p,h,n as v,b as P,G as S,H as f,o as D}from"../chunks/index.137f5445.js";import{S as y,b as G,i as R,f as A,A as z,D as E,P as j,W as k,L as I,v as O,c as W,C as q}from"../chunks/three.module.c2ac7129.js";import{O as F}from"../chunks/OrbitControls.e9bb9833.js";import{G as H}from"../chunks/GLTFLoader.e74a6222.js";import{D as V}from"../chunks/DRACOLoader.8488915b.js";import{G as T}from"../chunks/lil-gui.esm.5b862306.js";function $(g){let t,e,n;return{c(){t=w("div"),e=w("div"),n=w("canvas"),this.h()},l(i){t=m(i,"DIV",{});var o=p(t);e=m(o,"DIV",{class:!0});var d=p(e);n=m(d,"CANVAS",{class:!0}),p(n).forEach(h),d.forEach(h),o.forEach(h),this.h()},h(){v(n,"class","webgl svelte-1xjiexi"),v(e,"class","app svelte-1xjiexi")},m(i,o){P(i,t,o),S(t,e),S(e,n)},p:f,i:f,o:f,d(i){i&&h(t)}}}function B(g){return D(()=>{W.enabled=!1,new T;const t=document.querySelector("canvas.webgl"),e=new y,n=new V;n.setDecoderPath("/draco/");const i=new H;i.setDRACOLoader(n);let o=null;i.load("/three/journey/24/models/tac-tic.glb",_=>{o=_.scene,o.scale.set(5,5,5),o.position.set(0,1,0),e.add(o)});const d=new G(new R(50,50),new A({color:"#444444",metalness:0,roughness:.5}));d.receiveShadow=!0,d.rotation.x=-Math.PI*.5,e.add(d);const x=new z(16777215,.8);e.add(x);const s=new E(16777215,.6);s.castShadow=!0,s.shadow.mapSize.set(1024,1024),s.shadow.camera.far=15,s.shadow.camera.left=-7,s.shadow.camera.top=7,s.shadow.camera.right=7,s.shadow.camera.bottom=-7,s.position.set(5,5,5),e.add(s);const a={width:window.innerWidth,height:window.innerHeight};window.addEventListener("resize",()=>{a.width=window.innerWidth,a.height=window.innerHeight,c.aspect=a.width/a.height,c.updateProjectionMatrix(),r.setSize(a.width,a.height),r.setPixelRatio(Math.min(window.devicePixelRatio,2))});const c=new j(75,a.width/a.height,.1,100);c.position.set(-8,4,8),e.add(c);const l=new F(c,t);l.target.set(0,1,0),l.enableDamping=!0;const r=new k({canvas:t});r.outputColorSpace=I,r.shadowMap.enabled=!0,r.shadowMap.type=O,r.setSize(a.width,a.height),r.setPixelRatio(Math.min(window.devicePixelRatio,2));const L=new q,u=()=>{L.getElapsedTime(),l.update(),r.render(e,c),window.requestAnimationFrame(u)};u()}),[]}class Y extends b{constructor(t){super(),C(this,t,B,$,M,{})}}export{Y as component};
