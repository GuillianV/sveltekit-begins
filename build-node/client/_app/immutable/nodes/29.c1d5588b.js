import{S as D,i as E,s as R,k as v,l as b,m as x,h as p,n as k,b as z,G,H as y,o as A}from"../chunks/index.137f5445.js";import{S as F,A as I,D as O,b as _,h as L,M,Z as T,P as V,W,L as q,c as B,_ as H,C as $}from"../chunks/three.module.c2ac7129.js";import{O as N}from"../chunks/OrbitControls.e9bb9833.js";import{G as U}from"../chunks/GLTFLoader.e74a6222.js";import{G as X}from"../chunks/lil-gui.esm.5b862306.js";function Y(S){let n,e,s;return{c(){n=v("div"),e=v("div"),s=v("canvas"),this.h()},l(c){n=b(c,"DIV",{});var r=x(n);e=b(r,"DIV",{class:!0});var d=x(e);s=b(d,"CANVAS",{class:!0}),x(s).forEach(p),d.forEach(p),r.forEach(p),this.h()},h(){k(s,"class","webgl svelte-1xjiexi"),k(e,"class","app svelte-1xjiexi")},m(c,r){z(c,n,r),G(n,e),G(e,s)},p:y,i:y,o:y,d(c){c&&p(n)}}}function Z(S){return A(()=>{B.enabled=!1,new X;const n=document.querySelector("canvas.webgl"),e=new F;let s=null;new U().load("/three/journey/23/models/Duck/glTF-Binary/Duck.glb",i=>{s=i.scene,e.add(s)});const r=new I(16777215,.2),d=new O(16777215,.7);d.position.set(-3,3,3),e.add(r,d);const h=new _(new L(.5,16,16),new M({color:"#ff0000"}));h.position.x=-2;const f=new _(new L(.5,16,16),new M({color:"#ff0000"})),w=new _(new L(.5,16,16),new M({color:"#ff0000"}));w.position.x=2,e.add(h,f,w);const u=new T,t={width:window.innerWidth,height:window.innerHeight};window.addEventListener("resize",()=>{t.width=window.innerWidth,t.height=window.innerHeight,a.aspect=t.width/t.height,a.updateProjectionMatrix(),l.setSize(t.width,t.height),l.setPixelRatio(Math.min(window.devicePixelRatio,2))});const g=new H;window.addEventListener("mousemove",i=>{g.x=i.clientX/t.width*2-1,g.y=-(i.clientY/t.height)*2+1}),window.addEventListener("click",i=>{if(m!==null){const o=m.object;o.scale.set(o.scale.x+.1,o.scale.y+.1,o.scale.z+.1),console.log(m.object.uuid+" clicked")}});const a=new V(75,t.width/t.height,.1,100);a.position.z=3,e.add(a);const j=new N(a,n);j.enableDamping=!0;const l=new W({canvas:n});l.outputColorSpace=q,l.setSize(t.width,t.height),l.setPixelRatio(Math.min(window.devicePixelRatio,2));const P=new $;let m=null;const C=()=>{const i=P.getElapsedTime();h.position.y=Math.sin(i),f.position.y=Math.sin(i+.5),w.position.y=Math.sin(i+1),u.setFromCamera(g,a);let o=null;s?o=u.intersectObjects([h,f,w,s]):o=u.intersectObjects([h,f,w]),o.length>0?m=o[0]:m=null,j.update(),l.render(e,a),window.requestAnimationFrame(C)};C()}),[]}class ne extends D{constructor(n){super(),E(this,n,Z,Y,R,{})}}export{ne as component};
